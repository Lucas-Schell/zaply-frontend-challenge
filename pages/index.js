import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Product from '../components/ProductCard';
import SearchBar from '../components/SearchBar';
import { useState } from 'react';
import Modal from '../components/Modal';

function Home(props) {
  const { data, categories } = props;
  const [products, setProducts] = useState(data);
  const [isOpen, setIsOpen] = useState(false);
  const [modalData, setModalData] = useState({});
  const [resultEdit, setResultEdit] = useState('');

  const fetchData = (qSearch, qCateg, qSort, qOrder) => {
    const querySearch = qSearch ? `search=${qSearch}` : '';
    const queryCategories = qCateg ? `categories=${qCateg}` : '';
    const querySort = qSort ? `sort=${qSort}` : '';
    const queryOrder = qOrder ? `order=${qOrder}` : '';
    fetch(`/api?${querySearch}&${queryCategories}&${querySort}&${queryOrder}`).then(data => data.json()).then(data => {
      setProducts(data.data)
    });
  }

  const openEdit = (productData) => {
    setIsOpen(true)
    setModalData(productData)
  }

  const closeEdit = () => {
    setIsOpen(false)
  }

  const onEditSubmit = (data) => {
    fetch(`/api/${data.productId}`, {
      headers: {
        'Content-Type': 'application/json'
      },
      method: 'PUT',
      body: JSON.stringify(data)
    }).then(data => data.json()).then(data => {
      if (data.success) {
        setResultEdit('Produto atualizado com sucesso!');
        setProducts(prevState => prevState.map(product => {
          if (product.productId === data.data.productId) {
            return data.data
          }
          return product
        }))
      } else {
        setResultEdit('O produto n√£o foi atualizado!');
      }
    });
  }

  return (
    <div className={styles.container}>

      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app"/>
        <link rel="icon" href="/favicon.ico"/>
      </Head>

      <main className={styles.main}>
        {isOpen &&
        <Modal isOpen={isOpen} {...modalData} closeModal={closeEdit} onSubmit={onEditSubmit} resultEdit={resultEdit}/>}
        <div>
          <SearchBar onSearchHandler={fetchData} categories={categories}/>
        </div>
        <div className={styles.grid}>
          {products.map(product => {
            return (
              <div key={product.productId} className={styles.productContainer}>
                <Product
                  productId={product.productId}
                  image={product.image}
                  name={product.name}
                  categories={product.categories}
                  price={product.price}
                  brand={product.brand}
                  onClick={openEdit}
                />
              </div>
            )
          })}
        </div>
      </main>
    </div>
  )
}

export async function getStaticProps() {
  let data = await fetch('http://localhost:3000/api');
  data = (await data.json()).data
  const categories = []
  data.forEach(item => {
    if (!categories.includes(item.categories)) {
      categories.push(item.categories)
    }
  })

  return {
    props: { data, categories },
    revalidate: 10
  };
}

export default Home
